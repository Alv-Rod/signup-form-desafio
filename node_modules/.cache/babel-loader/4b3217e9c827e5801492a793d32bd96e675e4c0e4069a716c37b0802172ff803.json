{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranhc\\\\signup-form-desafio\\\\src\\\\SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSignupContext } from \"./Context\";\nimport { FormDisplay } from \"./FormDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignupForm() {\n  _s();\n  const {\n    formData,\n    updateFormData,\n    setSubmitted,\n    setDisplayed\n  } = useSignupContext();\n  const requiredFields = ['username', 'email', 'password', 'passwordConfirm'];\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    updateFormData(name, value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const hasEmptyFields = requiredFields.some(field => formData[field] === undefined || formData[field] === '');\n    console.log(formData);\n    if (hasEmptyFields) {\n      return;\n    }\n    requiredFields.forEach(fieldKey => {\n      if (formData[fieldKey] !== undefined) {\n        updateFormData(fieldKey, formData[fieldKey]);\n      }\n    });\n    setDisplayed(true);\n    setSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"Nome de usu\\xE1rio\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"E-mail\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Senha\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"passwordConfirm\",\n        id: \"password-confirm\",\n        placeholder: \"Confirmar Senha\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"signup-btn\",\n      onClick: handleSubmit,\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(SignupForm, \"dv5OP8SERrKDsP2mVJ+gjTnNOs4=\", false, function () {\n  return [useSignupContext];\n});\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","useSignupContext","FormDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupForm","_s","formData","updateFormData","setSubmitted","setDisplayed","requiredFields","handleChange","event","name","value","target","handleSubmit","preventDefault","hasEmptyFields","some","field","undefined","console","log","forEach","fieldKey","children","type","id","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ranhc/signup-form-desafio/src/SignupForm.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { useSignupContext } from \"./Context\";\r\nimport { FormDisplay } from \"./FormDisplay\";\r\n\r\nfunction SignupForm() {\r\n    const {formData, updateFormData, setSubmitted, setDisplayed} = useSignupContext();\r\n    \r\n\r\n    const requiredFields = ['username', 'email', 'password', 'passwordConfirm'];\r\n\r\n    const handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        updateFormData(name, value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const hasEmptyFields = requiredFields.some(field => formData[field] === undefined || formData[field] === '');\r\n        console.log(formData)\r\n        if (hasEmptyFields) {\r\n            return\r\n        }\r\n        \r\n        requiredFields.forEach(fieldKey => {\r\n            if (formData[fieldKey] !== undefined) {\r\n                updateFormData(fieldKey, formData[fieldKey]);\r\n            }\r\n        })\r\n        setDisplayed(true)\r\n        setSubmitted(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Nome de usuÃ¡rio\" onChange={handleChange}/>\r\n                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"E-mail\" onChange={handleChange}/>\r\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Senha\" onChange={handleChange}/>\r\n                <input type=\"password\" name=\"passwordConfirm\" id=\"password-confirm\" placeholder=\"Confirmar Senha\" onChange={handleChange}/>\r\n            </form>\r\n                <button type=\"button\" id=\"signup-btn\" onClick={handleSubmit}>Cadastrar</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignupForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}